<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Esp8266 on girishjoshi.io</title>
    <link>http://girishjoshi.io/categories/esp8266/</link>
    <description>Recent content in Esp8266 on girishjoshi.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Copyright © 2015 - 2017 Girish Joshi, all rights reserved.</copyright>
    <lastBuildDate>Tue, 02 Oct 2018 15:19:28 +0530</lastBuildDate>
    
	<atom:link href="http://girishjoshi.io/categories/esp8266/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ESP8266 Read ADC Values Micropython</title>
      <link>http://girishjoshi.io/post/esp8266-read-adc-values-micropython/</link>
      <pubDate>Tue, 02 Oct 2018 15:19:28 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/esp8266-read-adc-values-micropython/</guid>
      <description>ADC stands for &amp;ldquo;Analog to Digital Convertor&amp;rdquo;. As the name suggests, it takes an analog signal as input and gives it&amp;rsquo;s digital equivalent value as output. In embedded systems ADCs are used all the time whenever something is to be measured; be it the temprature, pressure, weight, voltage, current; anything like that.</description>
    </item>
    
    <item>
      <title>ESP8266 Using MQTT</title>
      <link>http://girishjoshi.io/post/esp8266-using-mqtt/</link>
      <pubDate>Thu, 23 Aug 2018 01:02:18 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/esp8266-using-mqtt/</guid>
      <description>MQTT MQTT is a lightweight publish/subscribe messaging transport designed for machine-to-machine “Internet of Things” connectivity. It’s been used in all sorts of industries from home automation and Facebook Messenger mobile app to health care and remote monitoring over satellite links.
Installing MQTT Broker On Fedora
$ sudo dnf install mosquitto On Debian based systems</description>
    </item>
    
    <item>
      <title>ESP8266 Access GPIO Using Micropython</title>
      <link>http://girishjoshi.io/post/esp8266-access-gpio-using-micropython/</link>
      <pubDate>Wed, 01 Aug 2018 23:36:28 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/esp8266-access-gpio-using-micropython/</guid>
      <description>In this post I&amp;rsquo;ll be writing about accessing GPIO ports on ESP8266.
Module machine contains the apis for the GPIO on ESP8266.
import machine pin = machine.Pin(2, machine.Pin.IN, machine.Pin.PULL_UP) To use a GPIO we need to configure it as either input or output. In the above example machine.Pin.IN configures the GPIO pin as an input, meaning you can connect a button like the one shown below to it.</description>
    </item>
    
    <item>
      <title>ESP8266 Connecting to WIFI and Making HTTP Requests using MicroPython</title>
      <link>http://girishjoshi.io/post/esp8266-connecting-to-wifi-and-making-http-requests-micropython/</link>
      <pubDate>Thu, 26 Jul 2018 00:14:15 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/esp8266-connecting-to-wifi-and-making-http-requests-micropython/</guid>
      <description>There are two WiFi interfaces, one for the station (when the ESP8266 connects to a router) and one for the access point (for other devices to connect to the ESP8266).
Here is an example to connect ESP8266 to your wifi router.
&amp;gt;&amp;gt;&amp;gt; import network &amp;gt;&amp;gt;&amp;gt; sta_if = network.WLAN(network.STA_IF) &amp;gt;&amp;gt;&amp;gt; sta_if.active() # check if station mode is activated or not.</description>
    </item>
    
    <item>
      <title>ESP8266 Deploying Micropython and Using REPL</title>
      <link>http://girishjoshi.io/post/esp8266-deploying-micropython-and-using-repl/</link>
      <pubDate>Fri, 13 Jul 2018 20:03:46 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/esp8266-deploying-micropython-and-using-repl/</guid>
      <description>ESP8266 The ESP8266 is a low-cost Wi-Fi microchip with full TCP/IP stack and microcontroller capability produced by Espressif Systems. One of the coolest things about this cip is it can run Micropython. If you are new to programming or hardware/embedded systems and want to get into those, ESP8266 is a good way to get started.</description>
    </item>
    
  </channel>
</rss>