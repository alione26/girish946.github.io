<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Iot on girishjoshi.io</title>
    <link>http://girishjoshi.io/categories/iot/</link>
    <description>Recent content in Iot on girishjoshi.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Copyright Â© 2015 - 2017 Girish Joshi, all rights reserved.</copyright>
    <lastBuildDate>Sun, 14 Oct 2018 22:02:20 +0530</lastBuildDate>
    
	<atom:link href="http://girishjoshi.io/categories/iot/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Setup Zephyr Development Env on Manjaro Linux and Building Sample Application for X86 Qemu</title>
      <link>http://girishjoshi.io/post/setup-zephyr-development-env-on-manjaro-linux-and-building-sample-application-for-x86-qemu/</link>
      <pubDate>Sun, 14 Oct 2018 22:02:20 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/setup-zephyr-development-env-on-manjaro-linux-and-building-sample-application-for-x86-qemu/</guid>
      <description>Install the dependuncies using yaourt:
$ yaourt -S ninja ccache cmake gperf doxygen dfu-util dtc autoconf automake libtool Clone the zephyr repo and install requirements.
$ cd ~ $ git clone https://github.com/zephyrproject-rtos/zephyr.git $ cd zephyr/ $ pip3 install --user -r scripts/requirements.txt $ cd .. download the zephyr sdk.
$ wget https://github.</description>
    </item>
    
    <item>
      <title>ESP8266 Read ADC Values Micropython</title>
      <link>http://girishjoshi.io/post/esp8266-read-adc-values-micropython/</link>
      <pubDate>Tue, 02 Oct 2018 15:19:28 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/esp8266-read-adc-values-micropython/</guid>
      <description>ADC stands for &amp;ldquo;Analog to Digital Convertor&amp;rdquo;. As the name suggests, it takes an analog signal as input and gives it&amp;rsquo;s digital equivalent value as output. In embedded systems ADCs are used all the time whenever something is to be measured; be it the temprature, pressure, weight, voltage, current; anything like that.</description>
    </item>
    
    <item>
      <title>Install Armbian On Orange Pi Zero</title>
      <link>http://girishjoshi.io/post/install-armbian-on-orange-pi-zero/</link>
      <pubDate>Fri, 15 Dec 2017 09:18:40 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/install-armbian-on-orange-pi-zero/</guid>
      <description>Armbian Armbian is the linux for ARM development boards. It is a debian based distro, available for a verity of different development boards.
If you like to configure low level settings for your devices and if you are really concerned about the security; Armbian is for you.
In fact their web site claims that</description>
    </item>
    
    <item>
      <title>Interfacing LTC6802-2 with OrangePi using Python.</title>
      <link>http://girishjoshi.io/post/ltc6802-2-python/</link>
      <pubDate>Mon, 05 Jun 2017 17:31:50 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/ltc6802-2-python/</guid>
      <description>LTC6802 The LTC6802 is a complete battery monitoring IC that includes a 12-bit ADC, a precision voltage reference, a high voltage input multiplexer and a serial interface. Each LTC6802-2 can measure up to 12 series connected bat-tery cells with an input common mode voltage up to 60V.
LTC6802 is a great option if you want to build battry monitoring system with more accuracy.</description>
    </item>
    
  </channel>
</rss>