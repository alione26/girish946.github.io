<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on girishjoshi.io</title>
    <link>http://girishjoshi.io/tags/linux/</link>
    <description>Recent content in Linux on girishjoshi.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Copyright (c) 2017 Girish Joshi, all rights reserved.</copyright>
    <lastBuildDate>Sun, 10 Jun 2018 12:05:38 +0530</lastBuildDate>
    
	<atom:link href="http://girishjoshi.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>RaspberryPi GPIO Python</title>
      <link>http://girishjoshi.io/post/raspberrypi-gpio-python/</link>
      <pubDate>Sun, 10 Jun 2018 12:05:38 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/raspberrypi-gpio-python/</guid>
      <description>To access GPIO of Raspberry Pi using python, you need to have following dependencies installed.
 python-dev python-pip RPi.GPIO  to install python-dev and python-pip:
$ sudo apt-get install python-dev python-pip  to install RPi.GPIO:
$ pip install RPi.GPIO  Once this is done you are all set to use the RPi GPIO.
The sample code for taking input from a gpio pin is given below
#! /usr/bin/python from RPi import GPIO as io import time #Use the actual pin numbers on the board in the code.</description>
    </item>
    
    <item>
      <title>&#34;Hello World!&#34; Linux Kernel Module</title>
      <link>http://girishjoshi.io/post/linux-kernel-module-hello-world/</link>
      <pubDate>Fri, 04 May 2018 17:13:29 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/linux-kernel-module-hello-world/</guid>
      <description>What is a kernel module? Kernel modules are the pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system.
The device drivers, networking stack; for almost everything you will find a module in the kernel.
To use the kernel module there are three specific tools/commands that you will need.
$ lsmod # List all existing modules in the kernel.</description>
    </item>
    
    <item>
      <title>Setup Personal MediaServer Using RaspberryPi and MiniDLNA</title>
      <link>http://girishjoshi.io/post/setup-personal-mediaserver-using-raspberrypi-and-minidlna/</link>
      <pubDate>Sun, 29 Apr 2018 05:10:55 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/setup-personal-mediaserver-using-raspberrypi-and-minidlna/</guid>
      <description>Few weeks back my sister ordered a raspberry pi so that she could get started with linux and small DIY projects in electronics.
As we didn&amp;rsquo;t have any modules/sensors/components needed for electronics projects; we decided that we will setup a media server using the RPi, we already have a 1TB external Hard Disk drive; which can be used for the storage.
There were a lot of different tools to implement it, some of them are:</description>
    </item>
    
    <item>
      <title>Compile Linux Kernel (on Fedora), Pune Kernel Meetup Assignment</title>
      <link>http://girishjoshi.io/post/compile-kernel-on-fedora-pune-kernel-meetup-assignment/</link>
      <pubDate>Sun, 22 Apr 2018 12:03:14 +0000</pubDate>
      
      <guid>http://girishjoshi.io/post/compile-kernel-on-fedora-pune-kernel-meetup-assignment/</guid>
      <description>Pune Kernel Meetup Assignment. An assignment was given at Pune Kernel Meetup-January-2018, for people to get started with linux kernel.
The assignment was to print &amp;ldquo;Hello World&amp;rdquo; as the first line in the kernel boot up.
So here is the solution to this problem that I could find.
The Solution. Here are the steps to print &amp;ldquo;Hello World&amp;rdquo; as the first line in the kernel bootup.
 Get the kernel source tree.</description>
    </item>
    
    <item>
      <title>Compile FeatherPad text editor on Fedora</title>
      <link>http://girishjoshi.io/post/compile-featherpad-text-editor-on-fedora/</link>
      <pubDate>Sat, 07 Apr 2018 23:00:21 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/compile-featherpad-text-editor-on-fedora/</guid>
      <description>FetherPad FeatherPad is a lightweight Qt5 plain-text editor for Linux. It is independent of any desktop environment and has:
 Drag-and-drop support, including tab detachment and attachment; X11 virtual desktop awareness (using tabs on current desktop but opening a new window on another); An optionally permanent search-bar with a different search entry for each tab; Instant highlighting of found matches when searching; A docked window for text replacement; Support for showing line numbers and jumping to a specific line; Automatic detection of text encoding as far as possible and optional saving with encoding; Syntax highlighting for common programming languages; Session management; Side-pane mode; Auto-saving; Printing; Text zooming; Appropriate but non-interrupting prompts; and Other features that can be found in its settings, on its menus or when it is actually used.</description>
    </item>
    
  </channel>
</rss>