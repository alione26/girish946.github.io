<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Network on girishjoshi.io</title>
    <link>http://girishjoshi.io/tags/network/</link>
    <description>Recent content in Network on girishjoshi.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Copyright © 2015 - 2017 Girish Joshi, all rights reserved.</copyright>
    <lastBuildDate>Thu, 23 Aug 2018 01:02:18 +0530</lastBuildDate>
    
	<atom:link href="http://girishjoshi.io/tags/network/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ESP8266 Using MQTT</title>
      <link>http://girishjoshi.io/post/esp8266-using-mqtt/</link>
      <pubDate>Thu, 23 Aug 2018 01:02:18 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/esp8266-using-mqtt/</guid>
      <description>MQTT MQTT is a lightweight publish/subscribe messaging transport designed for machine-to-machine “Internet of Things” connectivity. It’s been used in all sorts of industries from home automation and Facebook Messenger mobile app to health care and remote monitoring over satellite links.
Installing MQTT Broker On Fedora
$ sudo dnf install mosquitto On Debian based systems</description>
    </item>
    
    <item>
      <title>ESP8266 Connecting to WIFI and Making HTTP Requests using MicroPython</title>
      <link>http://girishjoshi.io/post/esp8266-connecting-to-wifi-and-making-http-requests-micropython/</link>
      <pubDate>Thu, 26 Jul 2018 00:14:15 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/esp8266-connecting-to-wifi-and-making-http-requests-micropython/</guid>
      <description>There are two WiFi interfaces, one for the station (when the ESP8266 connects to a router) and one for the access point (for other devices to connect to the ESP8266).
Here is an example to connect ESP8266 to your wifi router.
&amp;gt;&amp;gt;&amp;gt; import network &amp;gt;&amp;gt;&amp;gt; sta_if = network.WLAN(network.STA_IF) &amp;gt;&amp;gt;&amp;gt; sta_if.active() # check if station mode is activated or not.</description>
    </item>
    
  </channel>
</rss>