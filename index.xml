<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>girishjoshi.io</title>
    <link>http://girishjoshi.io/</link>
    <description>Recent content on girishjoshi.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Copyright Â© 2015 - 2017 Girish Joshi, all rights reserved.</copyright>
    <lastBuildDate>Wed, 01 Aug 2018 23:36:28 +0530</lastBuildDate>
    
	<atom:link href="http://girishjoshi.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ESP8266 Access GPIO Using Micropython</title>
      <link>http://girishjoshi.io/post/esp8266-access-gpio-using-micropython/</link>
      <pubDate>Wed, 01 Aug 2018 23:36:28 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/esp8266-access-gpio-using-micropython/</guid>
      <description>In this post I&amp;rsquo;ll be writing about accessing GPIO ports on ESP8266.
Module machine contains the apis for the GPIO on ESP8266.
import machine pin = machine.Pin(2, machine.Pin.IN, machine.Pin.PULL_UP) To use a GPIO we need to configure it as either input or output. In the above example machine.Pin.IN configures the GPIO pin as an input, meaning you can connect a button like the one shown below to it.</description>
    </item>
    
    <item>
      <title>ESP8266 Connecting to WIFI and Making HTTP Requests using MicroPython</title>
      <link>http://girishjoshi.io/post/esp8266-connecting-to-wifi-and-making-http-requests-micropython/</link>
      <pubDate>Thu, 26 Jul 2018 00:14:15 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/esp8266-connecting-to-wifi-and-making-http-requests-micropython/</guid>
      <description>There are two WiFi interfaces, one for the station (when the ESP8266 connects to a router) and one for the access point (for other devices to connect to the ESP8266).
Here is an example to connect ESP8266 to your wifi router.
&amp;gt;&amp;gt;&amp;gt; import network &amp;gt;&amp;gt;&amp;gt; sta_if = network.WLAN(network.STA_IF) &amp;gt;&amp;gt;&amp;gt; sta_if.active() # check if station mode is activated or not.</description>
    </item>
    
    <item>
      <title>ESP8266 Deploying Micropython and Using REPL</title>
      <link>http://girishjoshi.io/post/esp8266-deploying-micropython-and-using-repl/</link>
      <pubDate>Fri, 13 Jul 2018 20:03:46 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/esp8266-deploying-micropython-and-using-repl/</guid>
      <description>ESP8266 The ESP8266 is a low-cost Wi-Fi microchip with full TCP/IP stack and microcontroller capability produced by Espressif Systems. One of the coolest things about this cip is it can run Micropython. If you are new to programming or hardware/embedded systems and want to get into those, ESP8266 is a good way to get started.</description>
    </item>
    
    <item>
      <title>Implementing HTTP Basic Authentication in Golang</title>
      <link>http://girishjoshi.io/post/implementing-http-basic-authentication-in-golang/</link>
      <pubDate>Thu, 05 Jul 2018 14:21:38 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/implementing-http-basic-authentication-in-golang/</guid>
      <description>Basic access authentication uses standard fields in the HTTP headers for providing user credentials. It is the simplest technique for enforcing access control to web resources. It does not require cookies or session identifier or login page.
The specifications for basic access authentication are specified in RFC7617
For Golang httpauth package provides HTTP Basic Authentication middleware.</description>
    </item>
    
    <item>
      <title>Fabric a Great Tool to Automate Mundane Tasks</title>
      <link>http://girishjoshi.io/post/fabric-a-great-tool-to-automate-mundane-tasks/</link>
      <pubDate>Sat, 23 Jun 2018 11:44:32 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/fabric-a-great-tool-to-automate-mundane-tasks/</guid>
      <description>This is a late post, few months back I had to update a certain firmware for a logger device on to hundreds of the devices. For some reason at that time the OTA update mechanism which was already implemented on those devices did not work. As it was crucial to update all the devices as soon as possible, some work around for this problem had to be found.</description>
    </item>
    
    <item>
      <title>RaspberryPi GPIO Python</title>
      <link>http://girishjoshi.io/post/raspberrypi-gpio-python/</link>
      <pubDate>Sun, 10 Jun 2018 12:05:38 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/raspberrypi-gpio-python/</guid>
      <description>To access GPIO of Raspberry Pi using python, you need to have following dependencies installed.
 python-dev python-pip RPi.GPIO  to install python-dev and python-pip:
$ sudo apt-get install python-dev python-pip to install RPi.GPIO:
$ pip install RPi.GPIO  Once this is done you are all set to use the RPi GPIO.</description>
    </item>
    
    <item>
      <title>&#34;Hello World!&#34; Linux Kernel Module</title>
      <link>http://girishjoshi.io/post/linux-kernel-module-hello-world/</link>
      <pubDate>Fri, 04 May 2018 17:13:29 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/linux-kernel-module-hello-world/</guid>
      <description>What is a kernel module? Kernel modules are the pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system.
The device drivers, networking stack; for almost everything you will find a module in the kernel.</description>
    </item>
    
    <item>
      <title>Setup Personal MediaServer Using RaspberryPi and MiniDLNA</title>
      <link>http://girishjoshi.io/post/setup-personal-mediaserver-using-raspberrypi-and-minidlna/</link>
      <pubDate>Sun, 29 Apr 2018 05:10:55 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/setup-personal-mediaserver-using-raspberrypi-and-minidlna/</guid>
      <description>Few weeks back my sister ordered a raspberry pi so that she could get started with linux and small DIY projects in electronics.
As we didn&amp;rsquo;t have any modules/sensors/components needed for electronics projects; we decided that we will setup a media server using the RPi, we already have a 1TB external Hard Disk drive; which can be used for the storage.</description>
    </item>
    
    <item>
      <title>Compile Linux Kernel (on Fedora), Pune Kernel Meetup Assignment</title>
      <link>http://girishjoshi.io/post/compile-kernel-on-fedora-pune-kernel-meetup-assignment/</link>
      <pubDate>Sun, 22 Apr 2018 12:03:14 +0000</pubDate>
      
      <guid>http://girishjoshi.io/post/compile-kernel-on-fedora-pune-kernel-meetup-assignment/</guid>
      <description>Pune Kernel Meetup Assignment. An assignment was given at Pune Kernel Meetup-January-2018, for people to get started with linux kernel.
The assignment was to print &amp;ldquo;Hello World&amp;rdquo; as the first line in the kernel boot up.
So here is the solution to this problem that I could find.
The Solution.</description>
    </item>
    
    <item>
      <title>Compile FeatherPad text editor on Fedora</title>
      <link>http://girishjoshi.io/post/compile-featherpad-text-editor-on-fedora/</link>
      <pubDate>Sat, 07 Apr 2018 23:00:21 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/compile-featherpad-text-editor-on-fedora/</guid>
      <description>FetherPad FeatherPad is a lightweight Qt5 plain-text editor for Linux. It is independent of any desktop environment and has:
 Drag-and-drop support, including tab detachment and attachment; X11 virtual desktop awareness (using tabs on current desktop but opening a new window on another); An optionally permanent search-bar with a different search entry for each tab; Instant highlighting of found matches when searching; A docked window for text replacement; Support for showing line numbers and jumping to a specific line; Automatic detection of text encoding as far as possible and optional saving with encoding; Syntax highlighting for common programming languages; Session management; Side-pane mode; Auto-saving; Printing; Text zooming; Appropriate but non-interrupting prompts; and Other features that can be found in its settings, on its menus or when it is actually used.</description>
    </item>
    
    <item>
      <title>Install Armbian On Orange Pi Zero</title>
      <link>http://girishjoshi.io/post/install-armbian-on-orange-pi-zero/</link>
      <pubDate>Fri, 15 Dec 2017 09:18:40 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/install-armbian-on-orange-pi-zero/</guid>
      <description>Armbian Armbian is the linux for ARM development boards. It is a debian based distro, available for a verity of different development boards.
If you like to configure low level settings for your devices and if you are really concerned about the security; Armbian is for you.
In fact their web site claims that</description>
    </item>
    
    <item>
      <title>Keep your bash history clean using python</title>
      <link>http://girishjoshi.io/post/keepyourbashhistorycleanusingpython/</link>
      <pubDate>Tue, 21 Nov 2017 14:20:08 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/keepyourbashhistorycleanusingpython/</guid>
      <description>If you are someone who spend a lot of time in terminal, you might want not to have certain commands that you&amp;rsquo;ve used, in your bash history. The commands like &amp;lsquo;ls&amp;rsquo; which prints the contents of the directory to the standard output, or the terminal based games like &amp;ldquo;Moon Buggy&amp;rdquo; or &amp;ldquo;2048-cli&amp;rdquo; etc, the things which are not important enough and don&amp;rsquo;t have too complex commands to be stored in the bash history.</description>
    </item>
    
    <item>
      <title>Getting Started With PyQt</title>
      <link>http://girishjoshi.io/post/gettingstartedwithpyqt/</link>
      <pubDate>Mon, 20 Nov 2017 20:42:57 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/gettingstartedwithpyqt/</guid>
      <description>PyQt is one of the two most popular Python bindings for the Qt cross-platform GUI/XML/SQL C++ framework (another binding is PySide).
If you have ever used any distribution of linux, you must have heard about Qt and GTK. Most of the desktop enviornments in linux used either of those Gui Toolkits, for example Gnome, Unity, MATE, Cinnamon etc use Gtk while KDE, Razor-Qt etc use Qt for creating Graphical interfaces.</description>
    </item>
    
    <item>
      <title>R305 fingerprint module &#43; python</title>
      <link>http://girishjoshi.io/post/r305-fingerprint-module-with-python/</link>
      <pubDate>Mon, 19 Jun 2017 21:55:23 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/r305-fingerprint-module-with-python/</guid>
      <description>This is the post regarding the Python-R305 package.
R305 is a very common finger print sensor. It is quite cheap, has a storage capacity of 250 fingerprints.
I came across this module about one and a half year ago. I had to use it in a small project with Raspberry-Pi.</description>
    </item>
    
    <item>
      <title>About Me.</title>
      <link>http://girishjoshi.io/about-me/</link>
      <pubDate>Tue, 06 Jun 2017 00:15:03 +0530</pubDate>
      
      <guid>http://girishjoshi.io/about-me/</guid>
      <description> I&amp;rsquo;m an OpenSource enthusiast, I like to work with anything that is linuxy.
IOT, Embedded Systems and linux kernel are my areas of interest.
I love single board computers.
Contributions:
 Plotcat python-R305 GnuKhata  C O N T A C T  E-Mail : girish946@gmail.com IRC Nick : girish946 Twitter : girish946 StackOverflow : girish946 Reddit : girish946  </description>
    </item>
    
    <item>
      <title>Interfacing LTC6802-2 with OrangePi using Python.</title>
      <link>http://girishjoshi.io/post/ltc6802-2-python/</link>
      <pubDate>Mon, 05 Jun 2017 17:31:50 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/ltc6802-2-python/</guid>
      <description>LTC6802 The LTC6802 is a complete battery monitoring IC that includes a 12-bit ADC, a precision voltage reference, a high voltage input multiplexer and a serial interface. Each LTC6802-2 can measure up to 12 series connected bat-tery cells with an input common mode voltage up to 60V.
LTC6802 is a great option if you want to build battry monitoring system with more accuracy.</description>
    </item>
    
    <item>
      <title>Getting started with Raspberry Pi</title>
      <link>http://girishjoshi.io/post/getting-started-with-raspberry-pi/</link>
      <pubDate>Wed, 12 Apr 2017 16:42:34 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/getting-started-with-raspberry-pi/</guid>
      <description>If you are using raspberry pi for the first time; then this post might be helpful to setup the device.
In this post I&amp;rsquo;ll cover
 installing raspbian/ubuntu on the sd card for raspberry pi. configuring ssh. configuring wifi to connect to the network automatically.  Installing Raspbian/Ubuntu on the SD card First of all download the image of the os you want to install on the SD card from raspberrypi.</description>
    </item>
    
    <item>
      <title>Plotting live serial input from arduino/microcontroller using python matplotlib</title>
      <link>http://girishjoshi.io/post/plotting-live-serial-input-from-arduino-microcontroller-using-python-matplotlib/</link>
      <pubDate>Tue, 30 Aug 2016 20:23:25 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/plotting-live-serial-input-from-arduino-microcontroller-using-python-matplotlib/</guid>
      <description>Plotcat Hello all, I&amp;rsquo;m writing once again after almost six months. As the title of this post suggests I&amp;rsquo;ll be writing about plotting the live input data from a serial device using python. This data can be any input data that is comming through a serial port from any device such as a microcontroller, Arduino, any usart based wireless module such as HC-05 or HM-10 etc.</description>
    </item>
    
    <item>
      <title>February 2016 frdora meetup pune</title>
      <link>http://girishjoshi.io/post/february-2016-frdora-meetup-pune/</link>
      <pubDate>Thu, 11 Feb 2016 12:13:27 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/february-2016-frdora-meetup-pune/</guid>
      <description>On 6-Feb-2016 it was third Fedora meetup at pune at the same venue as earlier meetups &amp;ldquo;K 104, Jasminium, Magarpatta City Pune&amp;rdquo;. Event host was Kushal Das.
For this meetup the ajenda was &amp;ldquo;Debugging bugs in different applications written in C/Python in Fedora&amp;rdquo;. But after last meetup Amol and me had discussed about writing a tool like &amp;ldquo;Ip messenger&amp;rdquo; (our purpose was for file transfer) for linux which will be a nautilus plugin; so we decided that in this meetup we will do it.</description>
    </item>
    
    <item>
      <title>Introduction to Python</title>
      <link>http://girishjoshi.io/post/introduction_to_python/</link>
      <pubDate>Fri, 18 Dec 2015 13:34:16 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/introduction_to_python/</guid>
      <description>Python What is Python? Python is probably one of the few programming languages which is both simple and powerful.
It is a general purpose Language.
Features of Python:
Simple:
Python is a simple and minimalistic language. Reading a good Python code feels almost like reading English. It allows you to concentrate on the solution to the problem rather than the language itself.</description>
    </item>
    
    <item>
      <title>let the hacking begin</title>
      <link>http://girishjoshi.io/post/let-the-hacking-begin/</link>
      <pubDate>Thu, 17 Dec 2015 17:14:28 +0530</pubDate>
      
      <guid>http://girishjoshi.io/post/let-the-hacking-begin/</guid>
      <description>Hello, this is my first blog post. Let me Introduce myself.
My name is girish joshi. I&amp;rsquo;m a software developer. Usually I work with python.
I&amp;rsquo;ll be posting about Python, Raspberry-Pi, Internet Of Things and stuff like that.</description>
    </item>
    
  </channel>
</rss>